<?xml version="1.0" encoding="UTF-8"?>
<!-- New document created with EditiX at Tue Jun 07 14:21:44 CEST 2011 -->
<req_document   xsi:schemaLocation="req_document.xsd req_document.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="req_document.xsd">

<title>THEMAS
The Energy Management System
SOFTWARE REQUIREMENTS SPECIFICATION</title>
<version>1</version>
<issue_date>1998-10-14</issue_date>
<file_number>D_THEMAS_SRS_001</file_number>
<p id="1">
<title>None</title>

<p id="1.0">
<title>Introduction</title>
<text_body>
The following subsections of Section 1.0 provide an overview of
the entire Software Requirements Specification.
</text_body>
</p>

<p id="1.1">
<title>Purpose</title>
<text_body>
This Software Requirements Specification (SRS) specifies the
qualification requirements for The Energy Management System
(THEMAS). It provides a technical description of all so ftware
requirements of the system, provides traceability of software
capability requirements to the Statement of Work, and identifies
external interfaces. This document is intended for use by the
Design Requirements team, Principle Software Architect, and other
parties interested in the development and progression of THEMAS.
</text_body>
</p>

<p id="1.2">
<title>Scope</title>
<text_body>
The scope of this document is confined to only the software
requirements for the THEMAS system. Only those conditions
expressed with the imperative "shall" are to be interp reted as
binding requirements for this SRS. This document provides a
detailed definition of all requirements for the THEMAS system. It
does not provide a detailed definition of the exact systems that
will interface with THEMAS. The SRS shall give a prototype of a
simulated thermostat for verification and validation of THEMAS
reliability. The requirements specified in this document are to
be used as the basis for software design of the THEMAS system.
</text_body>

</p>

<p id="1.3">
<title>Definitions, Acronyms, and Abbreviations</title>
<text_body>
The following section lists acronyms and abbreviations and their
meaning as used in this document:
<description>
<item>ANSI American National Standards Institute</item>
<item>C Cooling</item>
<item>DB Database</item>
<item>DD Data Dictionary</item>
<item>DFD Data Flow Diagram</item>
<item>H Heating</item>
<item>IEEE Institute of Electrical and Electronic Engineers</item>
<item>LO Lower Overtemperature Value</item>
<item>LT Lower Trigger Value</item>
<item>OD Overtemperature Delta Value</item>
<item>SDD Software Design Document</item>
<item>SRS Software Requirements Specification</item>
<item>T Current Temperature Value</item>
<item>TD Trigger Delta Value</item>
<item>THEMAS The Energy Management System</item>
<item>TSET Current Temperature Setting</item>
<item>UT Upper Trigger Value</item>
<item>UO Upper Overtemperature Value</item>
</description>
</text_body>
</p>
<p id="1.4">
<title>References</title>
<text_body>
The following documents shown form a part of this specification.
In the event of conflict between the documents referenced and the
contents of this SRS, the contents of this document shall
overrule all others, with the exception of the Statement of Work.
<description>
<item>Statement of Work THEMAS_SOW_001</item>
<item>ANSI/IEE Guide to Software ANSI/IEEE STD 830-1984
Requirements Specification</item>
</description>
Technical society and technical association specifications are
generally available for reference from libraries. Copies of other
specifications may be obtained from Barry Scott, THEMAS project
Manager.
</text_body>
</p>


<p id="1.5">
<title>Overview</title>
<text_body>
This document is prepared in accordance with the American
National Standards Institute (ANSI) / Institute of Electrical and
Electronics Engineers (IEEE) Guide to Software Requirements
Specifications, ANSI/IEEE STD 830 -1984. Section 2.0 of this
document gives a general description of the THEMAS system. I t
provides product perspectives, product functions, user
characteristics, general constraints, and assumptions and
dependencies of the system. Section 3.0 contains all the details
the Design Requirements team needs to create a design. It will
contain functional and performance requirements, design
constraints, attributes and external interface requirements for
the THEMAS system.
<description>
<item>Appendix A contains the Dataflow Diagrams.</item>
<item>Appendix B contains the Traceability Matrix.</item>
<item>Appendix C contains the Data Dictionary .</item>
</description>
</text_body>
</p>
</p>

<p id="2">
<title>None</title>

<p id="2.0">
<title>General Description</title>
<text_body>
This section of this SRS describes the general factors that
effect the THEMAS system and its requirements. This section does
not state specific requirements, it only makes these requirements
easier understood.
</text_body>
</p>
<p id="2.1">
<title>Product Perspective</title>
<text_body>
The THEMAS system is a system that operates independent of any
other system, or any components of the heating and cooling system
to which it is attached. The THEMAS system, however, is composed
mainly of a hardware and software portion. This SRS only
specifies the requirements dealing with the software portion of
the system. If assumptions or dependencies about the hardware
were made, they are stated in this section of the SRS.
</text_body>
</p>

<p id="2.2">
<title>Product Functions</title>
<text_body>
The THEMAS system is divided into four major sections: Monitor
Temperature, Determine Utilization, Initialize System, and System
Reports. All four sections have an associated software
configuration item; all except the System Reports have an
associated hardware configuration item. The hardware
requirements are contained in the system specification. The
functions of the software for the system are contained in the
following paragraphs.
</text_body>

<p id="2.2.1">
<title>Monitor Temperature</title>
<text_body>
The monitor temperature function receives the valid temperature
and system parameters. The function then goes through the
process of determining temperature status. After this process is
done, either temperature limit is exceeded or the temperature
change is requested. If the temperature change is requested,
then the determine heating/cooling mode process is activated and
makes a heating/cooling request. Some other processes that help
the monitor temperature function are: validate temperature,
change thermostat setting, generate alarm, and system
initialization.
</text_body>
</p>

<p id="2.2.2">
<title>Determine Utilization</title>
<text_body>
The determine utilization function receives the heating/cooling
request and utilization parameters. The function then processes
the status of all heating/cooling units and sends out either unit
unavailable or heating/cooling unit needed. The fun ction
generates either a unit unavailable event which goes into the
System Reports function or it generates a heating/cooling signal
to turn on/off the units. The Monitor Temperature and Initialize
System functions help the determine utilization to do its
processes.
</text_body>
</p>

<p id="2.2.3">
<title>Initialize System</title>
<text_body>
The initialize system function receives the initialization data
for the THEMAS system. The processes that are associated with it
are: load heating/cooling unit definitions, turn off all
heating/cooling units, load th ermostat definitions, load
utilization parameters, set trigger values, set overtemperature
values, and establish valid temperature range. The outgoing
information that starts the entire THEMAS system is: clear all
heating/cooling signals, send thermostat definitions, send
utilization parameters, send trigger values, send overtemperature
values, and send valid temperature range.
</text_body>
</p>


<p id="2.2.4">
<title>System Reports</title>
<text_body>
The system reports function receives event data from the THEMAS
system. This function is a database that stores all the events
in the THEMAS system. This function is mainly for the use of
the supervisor of the THEMAS system to maintain an efficient
heating and cooling system. The only process that interacts with
the system reports function is the generate event data process.
</text_body>
</p>

</p>

<p id="2.3">
<title>User Characteristics</title>
<text_body>This system is intended to be used by people that maintain the
heating and cooling systems in a building. The system should not
need intervention from outside users other than the supervisor to
maintain operation of THEMAS. The system should provide warnings
to the supervisor about faulty temperatures. The displaying of
the current status of the system to the supervisor should not
contain excessive information which could confuse the supervisor.
The system should provide information in the form of reports to
the supervisor so that the system can be run efficiently.</text_body>
</p>


<p id="2.4">
<title>General Constraints</title>
<text_body>
The general constraints of the THEMAS system focus on the
functionality provided by the external devices connected to i t.
The thermostats shall only provide temperature values and
temperature settings. The heating and cooling units provide no
feedback to the THEMAS system. When a signal is sent to a
heating or cooling unit, no signal shall be available to allow
the THEMAS system to determine if the signal sent to the unit was
realized by the unit.
</text_body>
</p>

<p id="2.5">
<title>Assumptions and Dependencies</title>
<text_body>
In developing the requirements for the THEMAS system, several
assumptions have been made about the thermostat hardware and the
heating/cooling hardware. These assumptions are stated in the
following paragraphs.
</text_body>

<p id="2.5.1">
<title>Operating System Assumptions</title>
<text_body>
The THEMAS system shall be designed to run on the Microsoft ®
Windows NT™ operating system. All the internal process
communications shall be designed to operate on this operating
system. Any communication with the thermostats and heating and
cooling units shall be done through the interface to these units.
These interfaces shall run on this operating system as well. 
</text_body>
</p>



<p id="2.5.2">
<title>Thermostat Hardware Assumptions</title>
<text_body>
It is assumed that the thermostat is capable of returning the
current temperature and the current desired temperature setting
to the THEMAS system. The thermostat is constantly returning
these values with no real time delay in between the thermostat
and the THEMAS system. The thermostat also has the capability of
being set and controlled by a user of the THEMAS system.
All data sent by the thermostat is in the correct format for the
THEMAS system to use.
</text_body>
</p>

<p id="2.5.3">
<title>Heating/Cooling Hardware Assumptions</title>
<text_body>
It is assumed that the heating/cooling unit is incapable of
returning its current off/on status to the THEMAS system. The
heating/cooling unit has no real time delay when sending these
statuses to the THEMAS system. The heating/cooling unit shall
have the capability of being turned off and on by the supervisor
of the THEMAS system.
</text_body>
</p>

</p>
</p>

<p id="3">
<title>Engineering Requirements</title>
<p id="3.1"> 
<title>Functional Requirements</title>
<text_body>
This section is subdivided into ten main subsections: Initialize
Operational Parameters, Initialize System, Validate Temperature,
Monitor Temperature, Determine Utilization, Generate H/C Signal,
Generate Alarm Data, Generate Event Data, Change Thermostat
Setting, and Generate Reports. Each subsection describes the
software requirement for that individual software component of
the THEMAS system.
</text_body>
<p id="3.1.1">
<title>Initialize Operational Parameters</title>
<text_body>The following sections describe the Initialize System component
of the THEMAS system.</text_body>
<p id="3.1.1.1">
<title>Load H/C Unit Definitions (SRS -001)</title>
<p id="3.1.1.1.1">
<title>Introduction</title>
<text_body>The THEMAS system shall control t he heating and cooling units
that are defined as part of the THEMAS system. The definitions
of the individual heating and cooling systems reside in an
initialization file. The system shall read this file and the
definitions shall be derived from the initialization data in the
file.</text_body>
</p>
<p id="3.1.1.1.2">
<title>Inputs</title>
<text_body>Initialization Data</text_body>
</p>
<p id="3.1.1.1.3">
<title>Processing</title>
<text_body>The THEMAS system shall use the information contained in the
initialization data file to determine which heating and cooling
units are part of the THEMAS system. Ther e is one heating and
cooling unit that corresponds to one thermostat in each of four
quadrants on each of three floors of the office building.</text_body>
</p>
<p id="3.1.1.1.4">
<title>Outputs</title>
<text_body>Operational Parameters</text_body>
</p>
</p>
<p id="3.1.1.2">
<title>Load Thermostat Definitions (SRS -002)</title>
<p id="3.1.1.2.1">
<title>Introduction</title>
<text_body>Each thermostat shall have a unique identifier by which that
thermostat is identified in the THEMAS system. This procedure
will load these definitions into the THEMAS software.</text_body>
</p>
<p id="3.1.1.2.2">
<title>Inputs</title>
<text_body>Initialization Data</text_body>
</p>
<p id="3.1.1.2.3">
<title>Processing</title>
<text_body>Each quadrant of each floor shall have a thermostat which is to
be used to provide temperature data to the THEMAS system. The initialization file shall contain a unique identifier for each
thermostat that the system is to monitor. These identifiers
shall be read from the initialization file and loaded into the
THEMAS system during the initialization process.</text_body>
</p>
<p id="3.1.1.2.4">
<title>Outputs</title>
<text_body>Operational Parameters</text_body>
</p>
<p id="3.1.1.3">
<title>Load Utilization Parameters (SRS -003)</title>
<p id="3.1.1.3.1">
<title>Introduction</title>
<text_body>There shall be a maximum number of heating or cooling u nits that
can be on at any given time. This procedure loads the maximum
number of concurrently running units allowed.</text_body>
</p>
<p id="3.1.1.3.2">
<title>Inputs</title>
<text_body>Initialization Data</text_body>
</p>
<p id="3.1.1.3.3">
<title>Processing</title>
<text_body>The maximum number of heating or cooling units that can run
concurrently shall reside in an initialization file. The maximum
number of concurrently running units shall be read from the
initialization file and stored in the THEMAS system.</text_body>
</p>
<p id="3.1.1.3.4">
<title>Outputs</title>
<text_body>Utilization Parameters</text_body>
</p> <!--3.1.1.3.4 -->
</p>
<p id="3.1.1.4">
<title>Set Trigger Values (SRS -004)</title>
<p id="3.1.1.4.1">
<title>Introduction</title>
<text_body>
The trigger value is used in combination with the current
temperature to determine when a heating or cooling unit shall be
turned on or off.
</text_body>
</p>
<p id="3.1.1.4.2">
<title>Inputs</title>
<text_body>
Initialization Data
</text_body>
</p>
<p id="3.1.1.4.3">
<title>Processing</title>
<text_body>
The trigger values shall reside in an initialization file. This
procedure shall read the initialization file and establish the
trigger value from the data in that file.
</text_body>
</p>

<p id="3.1.1.4.4">
<title>Outputs</title>
<text_body>
Operational Parameters
</text_body>
</p>
</p>
<p id="3.1.1.5">
<title>Set Overtemp Values (SRS -005)</title>
<p id="3.1.1.5.1">
<title>Introduction</title>
<text_body>
The THEMAS system shall ensure the temperature reported by a
given thermostat shall not exceed a maximum deviation value of 3
degrees Fahrenheit.
</text_body>
</p>
<p id="3.1.1.5.2">
<title>Inputs</title>
<text_body>
Initialization Data
</text_body>
</p>

<p id="3.1.1.5.3">
<title>Processing</title>
<text_body>
The overtemperature values shall reside in an initialization
file. This procedure shall read the initialization file and
establish the overtemperature value from the data in that file.
</text_body>
</p>
<p id="3.1.1.5.4">
<title>Outputs</title>
<text_body>
Operational Parameters
</text_body>
</p>

</p>


<p id="3.1.1.6">
<title>Establish Valid Temperature Range (SRS -006)</title>
<p id="3.1.1.6.1">
<title>Introduction</title>
<text_body>
The THEMAS system shall only respond to temperatures that are
within a reasonable value.
</text_body>
</p>
<p id="3.1.1.6.2">
<title>Inputs</title>
<text_body>
Initialization Data
</text_body>
</p>
<p id="3.1.1.6.3">
<title>Processing</title>
<text_body>
The valid temperature range value shall reside in an
initialization file. This procedure shall read the
initialization file and establish the valid temperature range
from the data in it.
</text_body>
</p>
<p id="3.1.1.6.4">
<title>Outputs</title>
<text_body>
Operational Parameters
</text_body>
</p>
</p>
</p> <!-- 3.1.1.2 -->
</p>
<p id="3.1.2">
<title>Initialize System (SRS-007)</title>
<p id="3.1.2.1">
<title>Introduction</title>
<text_body>
When the THEMAS system is initialized, it shall first turn off
all the heating and cooling units. Then , it shall check all the
thermostats and determine if any thermostat’s settings require a
heating or cooling unit to be turned on back on.
</text_body>
</p>
<p id="3.1.2.2">
<title>Inputs</title>
<text_body>Operational  Parameters</text_body>
</p>
<p id="3.1.2.3">
<title>Processing</title>
<text_body>
This process shall first determine a known state of all the
heating and cooling units by issuing a request to turn off all
the units. It shall then read the current temperature values and
current temperature settings of each thermostat. If the settings
reflect a need for a heating or cooling unit to be turned o n, the
process shall issue a request to turn on the appropriate unit.
This determination shall be made in accordance with the rules
outlined in section 3.1.4.1 and 3.1.4.2.
</text_body>
</p>
<p id="3.1.2.4">
<title>Outputs</title>
<text_body>
H/C Request
</text_body>
</p>
</p> <!-- 3.1.2-->
<p id="3.1.3">
<title>Validate Temperature (SRS -008)</title>
<p id="3.1.3.1">
<title>Introduction</title>
<text_body>
The THEMAS system shall only respond to temperatures from the
thermostats that are within the specified valid range.
</text_body>
</p>
<p id="3.1.3.2">
<title>Inputs</title>
<text_body>
Operational Parameters
Temperature Data
</text_body>
</p>
<p id="3.1.3.3">
<title>Processing</title>
<text_body>
Two types of temperature data shall be recognized from the
thermostats: 1) the temperature setting and 2) the current
temperature. This module shall process both types of data.
A current temperature value that is received from an individual
thermostat shall be compared to the valid temperature range
values. If the current temperature value is strictly less than
the lower value of the valid temperature range or if the received
temperature value is strictly greater than the upper value of the
valid temperature range, then the THEMAS system shall identify
the current temperature value as an invalid temperature and shall
output an invalid temperature status. Otherwise, the THEMAS
system shall output a valid temperature status.
A temperature setting value that is received from an individual
thermostat shall be compared to the valid temperature range
values. If the temperature setting value is strictly less than
the lower value of the valid temperature range or if the
temperature setting value is strictly greater than the upper
value of the valid temperature range, then the THEMAS system
shall identify the temperature setting as an invalid temperature
and shall output an invalid temperature status. Otherwise, the
THEMAS system shall realize the value for that thermostat’s
temperature setting.
</text_body>
</p>
<p id="3.1.3.4">
<title>Outputs</title>
<text_body>
Invalid Temperature
Valid Temperature
</text_body>
</p>
</p> <!--3.1.3 -->
<p id="3.1.4">
<title>Monitor Temperature</title>
<text_body>
The following sections describe the Monitor Temperature component
of the THEMAS system.
</text_body>
<p id="3.1.4.1">
<title>Determine Temperature Status (SRS -009)</title>
<p id="3.1.4.1.1">
<title>Introduction</title>
<text_body>
The THEMAS system shall determine wh en a reported temperature or
a changed temperature setting exceeds the limits set by the
overtemperature values. Temperatures that exceed the
overtemperature limits shall be reported as such. Temperatures
that do not exceed these limits shall be output for subsequent
processing.
</text_body>
</p>

<p id="3.1.4.1.2">
<title>Inputs</title>
<text_body>
Valid Temperatures
Trigger Values
Overtemp Values
</text_body>
</p>
<p id="3.1.4.1.3">
<title>Processing</title>
<text_body>
The THEMAS system shall compare the reported temperature value to
the temperature setting and detect when the temperature value
exceeds the specified limits. To clarify these conditions, the
following definitions will be used:
LO : Lower Overtemperature Value = TSET - OD
UO : Upper Overtemperature Value = TSET + OD
If T = LO or UO = T then the THEMAS system shall recognize this
condition as the temperature limit has been exceeded. In this
case this process shall output the condition of the temperature
limit having been exceeded.
If LO = T = UO, then this process shall output the
temperature status.
</text_body>
</p>
<p id="3.1.4.1.4">
<title>Outputs</title>
<text_body>
Temperature Trigger Exceeded
Temperature Limit Exceeded
</text_body>
</p>
</p> <!-- 3.1.4.1-->
<p id="3.1.4.2">
<title>Determine H/C Mode (SRS -010)</title>
<p id="3.1.4.2.1">
<title>Introduction</title>
<text_body>
When the current temperature value exceeds the current
temperature setting by a pre -defined amount, the THEMAS system
shall activate the appropriate heating or cooling unit.s
</text_body>
</p>
<p id="3.1.4.2.2">
<title>Inputs</title>
<text_body>
Temperature Trigger Exceeded
</text_body>
</p>
<p id="3.1.4.2.3">
<title>Processing</title>
<text_body>
There are two conditions for each individual thermostat that
shall be tested for: 1) the thermostat’s settings are satisfied
and 2) the thermostat’s temperature indica tes it requires a
heating or cooling unit to be turned on. To clarify these
conditions, the following definitions will be used:
LT : Lower Trigger Value = TSET - TD
UT : Upper Trigger Value = TSET + TD
Condition 1: LT = T = UT
This condition indicates the thermostat’s current temperature
setting is satisfied. If this condition is true, then the module
shall output a request to turn off both the heating unit and the
cooling unit.
Condition 2: LO =  LT or UT T = UO
This condition the need for a heating or cooling unit to be
turned on. If this condition is true, then this module shall
output a request to turn on the heating unit if LO = T LT or
the cooling unit if UT T = UO.
</text_body>
</p>
<p id="3.1.4.2.4">
<title>Outputs</title>
<text_body>
H/C Request
</text_body>
</p>
</p> <!--3.1.4.2-->
</p> <!--3.1.4-->
<p id="3.1.5">
<title>Determine utilizations</title>
<p id="3.1.5.1">
<title>Determine Status of All H/C Units (SRS -011)</title>
<p id="3.1.5.1.1">
<title>Introduction</title>
<text_body>
The THEMAS system shall control each of the heating and cooling
units that are defined for the system. The THEMAS system shall
limit the number of heating or cooling units t hat may be running
simultaneously.
</text_body>
</p>
<p id="3.1.5.1.2">
<title>Inputs</title>
<text_body>
Operational Parameters
H/C Request
</text_body>
</p>


<p id="3.1.5.1.3">
<title>Processing</title>
<text_body>
The THEMAS system shall maintain the ON/OFF status of each
heating and cooling unit. When a request to turn on or off a
heating or cooling unit, the following processing will occur.
When a request to turn on a heating or cooling unit is received,
the system shall determine if the request can be honored. If the
maximum number of heating or cooling units is already running,
the request will be added to a LIFO queue. If the maximum number
of heating or cooling units is not running, this process will
generate a request to turn on the requested unit.
When a request to turn off a heating or cooling unit is received,
this process shall check the queue of waiting heating and cooling
requests. If the queue is not empty, this process shall remove
one request from the LIFO queue and check the current state of
the thermostat for which the queued request was made. If that
thermostat still needs a heating o r cooling unit turned on, this
process shall submit a request to turn that unit on.
</text_body>
</p>

<p id="3.1.5.1.4">



<title>Outputs</title>
<text_body>
Unit Unavailable
H/C ON/OFF Request
</text_body>
</p>
</p>

<p id="3.1.5.2">
<title>Generate Unit Unavailable Event (SRS -012)</title>

<p id="3.1.5.2.1">
<title> Introduction</title>
<text_body>
When a request for a heating unit or cooling to be turned is
denied, an event shall be generated and the THEMAS system shall
record that event. The information in these events will be used
for creating statistical reports.
</text_body>
</p> <!-- 3.1.5.2.1-->
<p id="3.1.5.2.2">
<title> Inputs</title>
<text_body>Unit Unavailable</text_body>
</p>

<p id="3.1.5.2.3"> 
<title>Processing</title>
<text_body>
This procedure shall realize the thermostat and heating or
cooling information and use this information to generate a
specific system event. This system event shall consist of a
description of the event type (a request denied event), a
designation of the thermostat that made the request, and a
designation of the heating or cooling unit that was not turned
on.
</text_body>
</p>
<p id="3.1.5.2.4">
<title>Outputs</title>
<text_body>System Event Data</text_body>
</p>

</p> <!--3.1.5.2-->

<p id="3.1.5.3">
<title>Generate H/C Request (SRS -013)</title>
</p> <!-- 3.1.5.3-->

<p id="3.1.5.3.1">
<title>Introduction</title>
<text_body>The THEMAS system shall control the heating and cooling units
that are designated as part of the THEMAS system.</text_body>
</p>
<p id="3.1.5.3.2">
<title>Inputs</title>
<text_body>H/C ON/OFF Request</text_body>
</p>
<p id="3.1.5.3.3">
<title>Processing</title>
<text_body>When a request to turn on or off a heating or cooling unit is
made, this process shall generate the appropriate request to
carry out that request. This request shall include the
designation of the heating or cooling unit and a flag to indicate
whether that unit is to be turned on or off.</text_body>
</p>
<p id="3.1.5.3.4">
<title>Outputs</title>
<text_body>Approved H/C Request</text_body>
</p>
</p> <!-- 3.1.5 -->
<p id="3.1.6">
<title>Generate H/C Signal (SRS -014)</title>
<p id="3.1.6.1">
<title>Introduction</title>
<text_body>
Once a request to turn on or off a heating or cooling unit, the
THEMAS system shall provide the necessary control signal for the
unit. This control signal shall also provide an indication of
the unit’s status at the requesting thermostat.
</text_body>
</p>
<p id="3.1.6.2">
<title>Inputs</title>
<text_body>
Approved H/C Request
</text_body>
</p>
<p id="3.1.6.3">
<title>Processing</title>
<text_body>
This process shall recognize the values for the requested heating
or cooling unit and the ON or OFF status that is being requested.
The necessary signal to the heating or cooling unit will be
generated. Since the interface to con trol the units has not been
defined, the part of this process that will issue the signal is
designated as TBD(to be determined).
In order to provide an indication of the status of the heating or
cooling unit back to the requesting thermostat, this procedure
shall output the status information of the heating or cooling
unit.
In order to provide an operational history and statistical
reports, this process shall generate an event each time a change
is made to the status of a heating or cooling unit. This ev ent
shall contain the identification of the heating or cooling unit
whose status is being changed.
</text_body>
</p>
<p id="3.1.6.4">
<title>Outputs</title>
<text_body>
Heating Unit Signal
Cooling Unit Signal
Unit Status
System Events
</text_body>
</p>
</p> <!-- 3.1.6 -->
<p id="3.1.7">
<title>Generate Alarm Data (SRS -015)</title>
<p id="3.1.7.1">
<title>Introduction</title>
<text_body>
There are two events that shall result in an alarm condition: 1)
an invalid temperature value is reported from a thermostat, or 2)
the reported temperature has exceeded the defined limits. This
process shall determine which alarm event is to be generated.
</text_body>
</p>
<p id="3.1.7.2">
<title>Inputs</title>
<text_body>
Invalid Temperature
Temperature Limit Exceeded
</text_body>
</p>
<p id="3.1.7.3">
<title>Processing</title>
<text_body>
When the THEMAS system detects a request for an alarm, this
process shall detect which of the two alarms are being requested.
If the system detects an invalid temperature, this process shall
output a continuous series of alternating 500 Hz and 700 Hz beeps
on the supervisor’s computer. Each beep shall have a three -
quarter second duration. This series of beeps shall continue
until the supervisor manually resets the alarm through the
supervisor’s interface window.
If the system detects a temperature limit has been exceeded, this
process shall output a continuous series of alternating 1000 Hz
and 1500 Hz beeps on the supervisor’s computer. Each beep shall
have a one-half second duration. This series of beeps shall
continue until the supervisor manually resets the alarm through
the supervisor’s interface window.
Each time an alarm is requested, an alarm event shall be
recorded. This event shall be used to provide operational and
statistical reports about the system.
</text_body>
</p>
<p id="3.1.7.4">
<title>Outputs</title>
<text_body>
Alarm Data
Alarm Events
</text_body>
</p>
</p> <!-- 3.1.7 -->
<p id="3.1.8">
<title>Generate Event Data (SRS -016)</title>
<p id="3.1.8.1">
<title>Introduction</title>
<text_body>
For each event that is generated, the THEMAS system shall
identify each event and generate the appropriate event data.
</text_body>
</p>
<p id="3.1.8.2">
<title>Inputs</title>
<text_body>
Alarm Events
System Events
Denied H/C Request
</text_body>
</p>
<p id="3.1.8.3">
<title>Processing</title>
<text_body>
When an event occurs, the THEMAS system shall identify the event
type and format an appropriate event message. The THEMAS system
shall record each event by a description and the c urrent system
time for that event. This information shall be recorded in a
Microsoft® Access® database that shall reside on the supervisor’s
computer.
</text_body>
</p>
<p id="3.1.8.4">
<title>Outputs</title>
<text_body>
Event Data
</text_body>
</p>
</p> <!-- 3.1.8 -->
<p id="3.1.9">
<title>Change Thermostat Setting (SRS -017)</title>
<p id="3.1.9.1">
<title>Introduction</title>
<text_body>
The THEMAS system shall provide the supervisor a mechanism to
change the temperature setting of any of the thermostats in the
system.
</text_body>
</p>
<p id="3.1.9.2">
<title>Inputs</title>
<text_body>
Operational Parameters
</text_body>
</p>
<p id="3.1.9.4">
<title>Processing</title>
<text_body>
The supervisor’s interface shall display the available
thermostats and their individual current temperature settings.
The supervisor shall be able to select one of the thermostats and
select a value for the current temperature from a list of valid
temperatures.
</text_body>
</p>
<p id="3.1.9.5">
<title>Outputs</title>
<text_body>
Temperature Data
</text_body>
</p>
</p> <!-- 3.1.9 -->
<p id="3.1.10">
<title>Generate Reports (SRS-018)</title>
<p id="3.1.10.1">
<title>Introduction</title>
<text_body>
The THEMAS shall provide the ability for the supervisor to select
between two different types of reports: 1) the operational
history of the THEMAS system for the past twelve months and 2) a
statistical summary for any selected mont h.
</text_body>
</p>
<p id="3.1.10.2">
<title>Inputs</title>
<text_body>
Event Data
</text_body>
</p>
<p id="3.1.10.3">
<title>Processing</title>
<text_body>
The supervisor’s interface to the THEMAS system shall provide a
mechanism to select between an operational history report or a
statistical summary report. Either report shall consist of an
ASCII file whose location and name shall be selectable by the
operator.
If the operational history report is selected, the THEMAS system
shall select all the events from the event database, sort the
events by date and time, and create the ASCII report file.
If the statistical report is selected, the THEMAS system shall
present the operator with a list of available months from which
to make a selection. After selecting one of the months, the
system shall generate the ASCII report file. The statistical
reports shall consist of the following statistics:
<itemize>
<item>The percentage of time each heating and cooling unit was on
for each day of that month.</item>
<item>For each thermometer, the ratio of the number of requests for
a heating and cooling unit that was granted to the number of
requests for a heating or cooling unit that was denied.</item>
</itemize>
</text_body>
</p>
<p id="3.1.10.4">
<title>Outputs</title>
<text_body>
Report Data
</text_body>
</p>
</p> <!-- 3.1.10 -->
</p> <!-- 3.1 -->
</p> <!-- 3 -->

<p id="APPENDIX A">
<title>TREACEABILITY MATRIX</title>
<p id="table 999"></p>
</p> <!-- APPENDIX A -->
<p id="APPENDIX B">

<title>DATAFLOW DIAGRAMS</title>
<p id="image 1000"></p>
<p id="image 1001"></p>
<p id="image 1002"></p>
<p id="image 1003"></p>
<p id="image 1004"></p>
</p> <!-- APPENDIX B -->
<p id="APPENDIX C">
<glossary ><!-- APPENDIX C-->
<!--<title>DATA DICTIONARY</title> -->

<glossary_item>
<term>Alarm Data</term>
<meaning><itemize>
<item>Allowed Meanings String</item>
<item>Notes Defines the various alarm types.</item>
<item>Input To Transforms (None)</item>
<item>Next Higher Dictionary Where Used (None)</item>
<item>Output From Transforms Generate Alarm Data THEMAS Context Diagram</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Alarm Events</term>
<meaning><itemize>
<item>Allowed Meanings String</item>
<item>Notes Describes the event that caused an alarm to occur.</item>
<item>Input To Transforms Generate Event Data</item>
<item>Next Higher Dictionary Where Used (None)</item>
<item>Output From Transforms Generate Alarm Data</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Approved H/C Request</term>
<meaning><itemize>
<item>Allowed Meanings String</item>
<item>Notes Defines the thermostat and heating or cooling unit to turn on or off.</item>
<item>Input To Transforms Generate H/C Signal</item>
<item>Next Higher Dictionary Where Used (None)</item>
<item>Output From Transforms Determine Utilization Generate H/C Request</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Denied H/C Request</term>
<meaning><itemize>
<item>Allowed MeaningsnString</item>
<item>Notes Defines the thermostat that requested heating or cooling, but was denied the request due to current system loading.</item>
<item>Input To Transforms Generate Event Data</item>
<item>Next Higher Dictionary Where Used (None)</item>
<item>Output From Transforms Determine Utilization</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Event Data</term>
<meaning><itemize>
<item>Allowed Meanings
String + Date</item>
<item>Notes
Describes the entries that are written to the database that
are associated with each event that occurs in the system.</item>
<item>Input To Transforms (None)</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Generate Event Data
Generate Unit Unavailable Event
THEMAS Context Diagram</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>H/C Request</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
When the system detects a need for heating or cooling, this
defines the thermostat and heating or cooling unit to turn
on or off.</item>
<item>Input To Transforms
Determine Utilization
Determine Status of All H/C Units</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Initialize System
Monitor Temperature</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>H/C ON/OFF Request</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Defines a request to generate the signal to turn on or off a
heating or cooling unit resulting from an approved request
for a heating or cooling unit.</item>
<item>Input To Transforms
Generate H/C Request</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Determine Status of All H/C Units</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>H/C Unit Definitions</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Defines each discrete heating and cooling unit in the
system.</item>
<item>Input To Transforms
(None)</item>
<item>Next Higher Dictionary Where Used
Operational Parameters</item>
<item>Output From Transforms
(None)</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Initialization Data</term>
<meaning><itemize>
<item>Allowed Meanings
String + Integer</item>
<item>Notes
Information from the initialization file that include the
thermostat definitions, heating and cooling definitions,
temperature limits, and trigger values.</item>
<item>Input To Transforms
Establish Valid Temperature Range
Initialize Operational Parameters
Load H/C Unit Definitions
Load Thermostat Definitions
Load Utilization Parameters
Set Trigger Values
Set Overtemp Values
THEMAS Context Diagram</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
(None)</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Invalid Temperature</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes Denotes the condition when an erroneous temperature is
reported from a thermostat.</item>
<item>Input To Transforms
Generate Alarm Data</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Validate Temperature</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Operational Parameters</term>
<meaning><itemize>
<item>Allowed Meanings
Determine Status Of All H/C Units + H/C Unit Definitions +
Overtemp Values + Thermostat Definitions + Trigger Values +
Utilization Parameters + Valid Temperatures</item>
<item>Notes
Information from the initialization file that include the
thermostat definitions, heating and cooling definitions,
temperature limits, and trigger values.</item>
<item>Input To Transforms
Change Thermostat Setting
Determine Utilization
Initialize System
Monitor Temperature
Validate Temperature</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
(None)</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Overtemp Values</term>
<meaning><itemize>
<item>Allowed Meanings
Integer</item>
<item>Notes
Defines the delta value relative to the temperature setting
value. A temperature at or beyond this delta indicates the
thermostat has reached a critical value where the heating or
cooling unit cannot satisfy the temperature setting value.</item>
<item>Input To Transforms
(None)</item>
<item>Next Higher Dictionary Where Used
Operational Parameters</item>
<item>Output From Transforms
(None)</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Report Data</term>
<meaning><itemize>
<item>Allowed Meanings
String + Timestamp</item>
<item>Notes
Contains the formatted report information.</item>
<item>Input To Transforms
(None)</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Generate Reports
THEMAS Context Diagram</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>System Events</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Describes each normal operational event that occurs in the
system.</item>
<item>Input To Transforms
Generate Event Data</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Generate H/C Signal</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Temperature Data</term>
<meaning><itemize>
<item>Allowed Meanings
String + Integer</item>
<item>Notes
Temperature and thermostat information to and from the
thermostats.</item>
<item>Input To Transforms
THEMAS Context Diagram
Validate Temperature</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Change Thermostat Setting</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Temperature Limit Exceeded</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Denotes the condition when the reported temperature has
exceeded the overtemperature value.</item>
<item>Input To Transforms
Generate Alarm Data</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Determine Temperature Status
Monitor Temperature</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Temperature Trigger Exceeded</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Denotes the condition when the reported temperature has
exceeded the triggering value indi cating a heating or
cooling unit should be requested.</item>
<item>Input To Transforms
Determine H/C Mode</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Determine Temperature Status</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Thermostat Definitions</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
The unique identifier associated with each thermostat in the
system.</item>
<item>Input To Transforms
(None)</item>
<item>Next Higher Dictionary Where Used
Operational Parameters</item>
<item>Output From Transforms
(None)</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Unit Status</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Defines the current on or off condition of the heating and
cooling units and the thermostat to which they are
associated.</item>
<item>Input To Transforms
(None)</item>
<item>Next Higher Dictionary Where Used (None)</item>
<item>Output From Transforms
Generate H/C Signal</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Unit Unavailable</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Defines the heating or cooling unit that was denied a
request to be turned on. Generated in response to a denied
request.</item>
<item>Input To Transforms
Generate Unit Unavailable Event
Stack Request</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Determine Status of All H/C Units
Stack Request</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Valid Temperatures</term>
<meaning><itemize>
<item>Allowed Meanings
Integer</item>
<item>Notes
Defines the upper and lower limits for a re ported
temperature value.</item>
<item>Input To Transforms
(None)</item>
<item>Next Higher Dictionary Where Used
Operational Parameters</item>
<item>Output From Transforms
(None)</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Utilization Parameters</term>
<meaning><itemize>
<item>Allowed Meanings
Integer</item>
<item>Notes Defines how many heating and cooling units that can run
simultaneously.</item>
<item>Input To Transforms
(None)</item>
<item>Next Higher Dictionary Where Used
Operational Parameters</item>
<item>Output From Transforms
(None)</item></itemize></meaning>
</glossary_item>
<glossary_item>
<term>Valid Temperature</term>
<meaning><itemize>
<item>Allowed Meanings
String</item>
<item>Notes
Denotes the condition when an valid temperature is reported
from a thermostat.</item>
<item>Input To Transforms
Monitor Temperature</item>
<item>Next Higher Dictionary Where Used
(None)</item>
<item>Output From Transforms
Validate Temperature</item></itemize></meaning>
</glossary_item>
</glossary> </p><!-- APPENDIX C -->
</req_document>