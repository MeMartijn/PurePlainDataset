<?xml version="1.0" encoding="UTF-8"?>
<!-- New document created with EditiX at Tue Jun 07 14:21:44 CEST 2011 -->
<req_document xsi:schemaLocation="req_document.xsd req_document.xsd" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="req_document.xsd">

<title>DRAFT
SOFTWARE REQUIREMENTS SPECIFICATION (SRS)
FOR THE
DEFENSE INFORMATION INFRASTRUCTURE (DII)
COMMON OPERATING ENVIRONMENT (COE)
XML SERVICES (XS)</title>
<version>1.0</version>
<p id= "1">
<title>Scope</title>
<p id="1.">
<title>IDENTIFICATION OF FUNCTIONAL AREA</title>
<text_body>This Software Requirements Specification (SRS) establishes the functional, 
performance, and verification requirements for the XML Services (XS) functional area of 
the Defense Information Infrastructure (DII) Common Operating Environment (COE). 
The XS functional area includes Registration of terms (tags and structures), 
Design of XML schemas, Generation and Consumption of XML documents.
</text_body>
</p>
<p id="2.">
<title>FUNCTIONAL AREA OVERVIEW</title>
<text_body>XML Services provide infrastructure services for mission and 
support applications using XML technology. These services isolate vendor-unique 
implementations of data access and provide applications a means of avoiding 
dependencies on physical access models. These services also provide data 
management functions for access to distributed (local and remote) 
database management systems as one of the solutions for interoperablity.</text_body>
</p>
<p id="3.">
<title>DOCUMENT OVERVIEW</title>
<text_body>This document outlines the software capabilities required for the XS 
components for the DII COE. Section 2 lists the documents that are applicable to 
this specification. Section 3 provides a list of functional capabilities. Section 4 
identifies the qualification requirements. Section 5 outlines the requirements and 
verification traceability matrix. 
Section 6 contains the applicable notes associated with the XS component.
</text_body>
</p>
</p>
<p id="2">
<title>APPLICABLE DOCUMENTS</title>
<p id="1.">
<title>GOVERNMENT DOCUMENTS</title>
<p id="SPECIFICATIONS:">
<text_body>Defense Information Infrastructure (DII), Shared Data Environment 
(SHADE), CAPSTONE DOCUMENT Version 1.0, 11 July 1996
<itemize>
<item>ACCS-A1-100-006 System Specification for ATCCS, 22 March 1995</item>
<item>ATCCS-A1-302-001A Army Tactical Command and Control System Common ATCCS Support Software 
(CASS) Systems/Segment Specification</item>
<item>CDRL A142 AWIS Software Requirements Specification (ASRD), July 1992</item>
<item>CDRL ML03 AWIS Systems Management Manual (SMM), 31 Oct. 1994</item>
<item>AWIS Support Software Design Document, December 1994</item>
<item>D18664A Standard Theater Army Command and Control System (STACCS) System 
Design Document Version 1.1/As Built, 1 Oct. 93</item>
<item>AAN-SDA001A Standard Theater Army Command and Control System (STACCS) System 
Specification, Version 1.1/As Built, 1 Oct. 93</item>
<item>Standard Theater Army Command and Control System (STACCS) System Software Programmers 
Manual, Draft.</item>
<item>Global Command and Control System (GCCS) Integration Standard, Version 1.0, October 1994.</item>
<item>Global Command and Control System (GCCS) Common Operating Environment Baseline, DISA, 28 November1994.</item>
<item>User Interface Specifications for Global Command and Control System (GCCS), Version 1.0, October 1994.</item>
<item>Draft Architectural Design Document for the Global Command and Control System (GCCS) Common Operating Environment 
(COE), Version 3, 24 July, 1994.</item>
</itemize>
</text_body>
</p>
<p id="STANDARDS:">
<text_body>
<itemize>
<item>MIL-STD-498 Military Standard - Software Development and Documentation,</item>
<item>DOD, Dec. 1994</item>
<item>FIPS PUB 127-2 Database Language SQL - Federal Information Processing Standards 
Publication 127-2, 2 June, 1993.</item>
<item>MIL-STD-6040 Military Standard â€“</item>
<item>ISO/IEC 9070 Formal Public Identifier</item>
</itemize>
</text_body>
</p>
</p>
<p id="2.">
<title>NON-GOVERNMENT DOCUMENTS</title>
<text_body>Petrucci, Steve, "Cross-Platform Power Tools, Application Developers 
for the Macintosh, Windows, and Windows NT", Random House Electronic Publishing, 
1993.Donald Lewine,"POSIX Programmer's Guide", O'Reilly &amp; Associates, Inc. 1991.
W3C Working Draft "Namespaces in XML"</text_body>
</p>
</p>
<p id="3.">
</p>
<p id="4.">
<title>REQUIREMENTS</title>
<p id="4.1">
<title>REQUIRED STATES AND MODES</title>
<text_body>
<itemize>
<item>Environmental Mode: This is the real-time operations that must react to varying 
degrees of readiness to full scale wartime operations such as crisis planning with
 the use of heterogeneous data types and sources, transfer capabilities, data management
 services.</item>
<item>COE Compliance. XML Services shall be segmented. COE sponsors shall adhere 
to compliance level requirements described in the I&amp;RTS. </item>
<item>In the fixed (static) mode of operation (base or data processing megacenter), the
 data management services shall have the capability of being tuned by on-site personnel
 to adjust for varying workloads and sizes of associated databases. These workloads and
 databases are expected to change more frequently and to a greater extent than for 
processing associated with deployed units</item>
<item>In a changing (dynamic) environment, such as with deployed units, the workload
 and database sizes may be more predetermined (given a more precise mission) and 
require access to fewer data management administrative capabilities than needed in a 
fixed environment. The XS shall have the ability to redefine or reset names of connect 
descriptors to database server instances. Connect descriptors are fully qualified object 
names and include address (protocol/host/port) and instance name. </item>
<item>In a degraded communications environment, there is a need, for example, to 
be able to reset session time-out values if the data management services are being
 accessed by users affected by the communications degradation. At a minimum, the 
session time-out values shall be user definable and be able to be reset prior to 
initialization of a user session. The goal is to provide the option of dynamically changing
session time values based on current communications performance identified by 
capabilities of the network management or DBMS. </item>
<item>End User Mode: Portion of XS services shall be used by various classes of
 users: data consumers, data and database managers, network information infrastructure
 resource managers. Some of these uses of the data management services will entail 
unique requirements that shall be fulfilled within the capability of XS services.</item>
<item>Maintenance Mode: This mode includes modification and/or addition of 
application data segments, user permission, privileges, and restructuring storage
and memory areas. In addition, maintenance also shall pertain to shutdown, open 
not-mounted and online/off-line implementations, modifications, upgrade, or other 
related actions. The data management services shall support managing various types
 of data, database architectures and platforms that includes hardware and software at
 the specified sites. </item>
<item>Training Mode. In support of training activities, the data management services 
shall provide for the same processing as would be encountered in a production
 environment. However, access to the database may be via a training application 
access to the DBMS rather than from the production mission application.</item>
</itemize>
</text_body>
</p>
<p id="4.2">
<title>XML SERVICES CAPABILITY REQUIREMENTS</title>
<text_body>The XS shall deliver inter-related components as shown
 in figure 3.2-1</text_body> 
<p id="Figure 3.2-1">
<p id="1">
<title>Register Terms and Structures (e.g., tags, DTDs, DCDs)</title>
<text_body>
<itemize>
<item>
Producer services A producer is an agent that contributes metadata for inclusion into an
 XML Registry for the purposes of ensuring maximum semantic understanding of a term 
as it appears in an XML document. To contribute metadata to a registry, the producer 
must be able to receive XML registry forms, submit metadata and the related information
 resource artifacts, and notify.
<itemize>
<item>Produce and display submittal forms as part of the Information Resource
 Submittal Package from the web containing the following Information Resource
 artifacts: XML Tag Specification, XML Spec (i.e. DTD, DCD etc.), Sample of XML document
 of the tag to be submitted. The Package is to be compressed and emailed or sent ftp to 
an addressee.</item>
<item>Download Information Resource Submittal Package from the web containing 
forms, instructions, and tools for submission to XML Registry.</item>
<item>Submit prescribed metadata related to information resource type, information 
resource association, status code, data types specified and other related information 
specified in Appendix A within a combination of forms. These forms are part of the 
Information Resource Submittal Package containing the following Information Resource
 artifacts: XML Tag Specification, XML Spec (i.e. DTD, DCD etc.), Sample of XML
 document of the tag to be submitted. The Package is to be compressed and emailed 
or sent ftp to an addressee.</item>
<item>Submit metadata by an on-line interactive process </item>
<item>Submit metadata by a off-line and interactive batch process </item>
<item>Parse submitted XML Registry specification forms </item>
<item>Populate XML Registry database </item>
<item>Modify of specified terms &amp; definitions of metadata and status of 
Information Resources.</item>
<item>Associate Information Resources specified in Appendix A. </item>
<item>Annotate rejected? </item>
<item>Assemble registered information resources to form new components.</item>
<item>Assemble new DTDs from current </item>
<item>Produce DTD as an instantiation (others are database schema, message
 definition) for modeling environment.</item>
<item>Notify change in Information Resources or authorized producer of tag.</item>
<item>Provide a capability to post planned changes to a registry</item>
<item>Approve and reject submissions</item>
<item>Forward request to different registry</item>
</itemize>
</item>
<item>
Consumer services. A consumer examines a registry to select a tag structure for reuse in one
 or more applications that will exchange data according to a pre-defined agreement.
<itemize>
<item>Discovery</item>
<item>View the XML Tags with the following relationships:
<itemize>
<item>Ancestor/ Descendant relationship: Provide the capability
 to view a Tagâ€™s origin </item>
<item>Uses/Used by relationship: Provide the capability to view a complex 
Container Tagâ€™s parent/child relationship</item>
<item>Data type information: Provide the capability to view a tagâ€™s data type
 and related information.</item>
<item>Versioning relationship: Provide the capability to view an Information 
resourceâ€™s versions</item>
<item>Reference Sets: Provide the capability to view text related to the domai
 values or the related reference set</item>
<item>Amplifying information: Provide the capability to view other information 
resources such as ERwin models, DTDs, documents, etc., which describe or 
otherwise provide amplifying information.</item>
<item>View the XML Tags via a tree/hierarchy structure or tabular format.</item>
<item>View the XML Tags by giving the user multiple search 
options to find a specific Tag.</item>
<item>View the XML tags by giving the user the search option to find all 
tags of a given subscriber/author.</item>
</itemize>
</item>
<item>Each Information Resource will have its own web page to allow the user 
to view all pertinent information, according to its information resource type.</item>
<item>View the Information Resource Submittal Package containing the following 
Information Resource artifacts: XML Tag Specification, XML Spec 
(i.e. DTD, DCD etc.), Sample of XML document of the tag to be submitted.</item>
<item>Display an XML Tag Specification form to the author of a given information 
resource. This XML Tag Spec will be used for inputting the requesting information
 for a specific Information Resource. </item>
<item>Provide capabilities to download the XML Tags or other
selected Information Resources.</item>
<item>Catalog entities and attributes within servers to enable browsing, 
searching, retrieving of data related to XML sources. </item>
<item>Process ANSI standard SQL as specified in FIPS PUB 127-2</item>
<item>Establish rules to ensure maximum semantic understanding 
of a term as it appears in an XML document</item>
<item>Links to DTDs, DCDs,</item>
<item>Namespace</item>
<item>Provide a capability to subscribe for notification of changes to 
Communities of Interest (COE) or Information Resources.</item>
</itemize>
</item>

<item>
Manager services
<itemize>
<item>create and manage usernames, superusers</item>
<item>Establish acceptable naming convention not to be in conflict with the DOD data 
standards convention and establish a relationship to other naming conventions.</item>
<item>Create a naming structure within the COE architecture to express the context 
and relationship of the naming convention to other naming conventions 
specified in the I&amp;RTS.</item>
<item>Define a set of metadata tags, information attributed to metadata tags 
(meta-metadata) and other related terms for the maintenance 
and control of XML tags.</item>
<item>Review/approve submission</item>
<item>Monitor changes to data models recorded in Registry</item>
<item>pass request off to â€¦ (per explicit federation agreements)</item>
</itemize>
</item>
<item>
Design the schema for an XML document
<itemize>
<item>Structure services
<itemize>
<item>Record structure</item>
<item>Check against standard (e.g., style guide wizard for tags)
<itemize>
<item>Validate</item>
<item>Use and reference existing tags and associated semantic structures</item>
</itemize>
</item>
</itemize>
</item>
<item>Content services
<itemize>
<item>Use &amp; reference existing tags &amp; associated semantic 
structures (extracted from Registry)
<itemize>
<item>create new tags &amp; associated semantic structures</item>
<item>interchange w/other design tools &amp; environments</item>
<item>Record semantic structure in JTA-compliant formalism</item>
<item>Generate standard views</item>
<item>Version metadata objects</item>
</itemize>
</item>
</itemize>
</item>
</itemize>
</item>
<item>
Generate xml &amp; schema documents
<itemize>
<item>Generate a document that includes (by ref or by value) a schema</item>
<item>Develop scheme to permit dynamic cross-referencing 
and indexing of XML objects.</item>
<item>Generate language (natural language) and charset values</item>
<item>Check conformance
<itemize>
<item>Well-formed</item>
<item>Validate</item>
<item>Extract views of data</item>
</itemize>
</item>
<item>Disassemble document to materialize different query results
 into different tree structure</item>
<item>Render</item>
<item>Interrogate document</item>
<item>Transmit sufficient metadata to construct alternate, semantically-valid
 views (e.g., XSL)</item>
<item>Express version</item>
</itemize>
</item>
<item>
Consume xml &amp; schema documents
<itemize>
<item>Parsers (dom, sax)</item>
<item>Check conformance
<itemize>
<item>Well-formed</item>
<item>Validate</item>
<item>Create validation constraints shall enable a meaningful sharing of
 XML-based schemas and related information.</item>
<item>Extract semantically-valid views from an XML document (e.g., XSL)</item>
<item>Disassemble hierarchical view to relational representation</item>
<item>Render</item>
</itemize>
</item>
</itemize>
</item>
</itemize>
</text_body>
</p>

</p>
</p>
<p id="4.4">
<title>REGISTRY SERVICES</title>
<text_body>The Registry shall provide standard APIs as specified in Appendix B.</text_body>
</p>
<p id="4.5">
<title>DATA ACCESS SERVICES INTERNAL INTERFACE REQUIREMENTS</title>
<text_body>The XS function shall provide standard APIs as specified in Appendix C.</text_body>
</p>
<p id="4.6">
<p id="4.6.1">
<text_body>The XS shall internally interface (transparent to the operator) with the 
existing data elements 
of the DBIF, DAC, and COTS RDBMS products.</text_body>
</p>
</p>
<p id="4.7">
<title>REGISTRY SERVICES ENVIRONMENT REQUIREMENTS</title>
<p id="4.7.1">
<text_body>The Registry software shall be portable and required to 
execute on COE-compliant platforms.</text_body>
</p>
</p>
<p id="4.8">
<title>PERSONNEL-RELATED REQUIREMENTS</title>
<text_body>Not applicable. Personnel requirements shall be determined by the developers of 
the system in which the XS module is embedded</text_body>
</p>
<p id="4.9">
<title>TRAINING-RELATED REQUIREMENTS</title>
<text_body>Not applicable. Training requirements shall be determined by the developers of the 
system in which the XS module is embedded.</text_body>
</p>
<p id="4.10">
<title>LOGISTICS-RELATED REQUIREMENTS</title>
<text_body>The XS developer is responsible for software maintenance, software 
support, and software updates. The DISA Configuration Manager (CM) is responsible 
for distribution of the XS 
product to system developers.</text_body>
</p>
<p id="4.11">
<title>OTHER REQUIREMENTS</title>
<text_body>None</text_body>
</p>
<p id="4.12">
<title>PACKAGING REQUIREMENTS</title>
<text_body>The XS software shall be delivered in accordance with DII COE guidelines.</text_body>
</p>
<p id="4.13">
</p>
<p id="4.14">
<title>PRECEDENCE AND CRITICALITY OF REQUIREMENTS</title>
<text_body>The following table depicts the mapping of the requirements in Section 3 to their corresponding precedence and criticality code and to other related requirements within the XS SRS. 
The precedence and criticality codes are the following:
<itemize>
<item>1 for Essential (E)</item>
<item>2 for Desirable (D)</item>
<item>3 for Optional (O).</item>
</itemize>
</text_body>
<p id="Table">
</p>
<p id="4.14.1">
</p>
<p id="4.14.2">
<title>QUALIFICATION PROVISIONS</title>
<text_body>COE Software will be qualified through formal validation tests of the 
SRS level requirements. The Qualification Methods applied to the software shall include 
test, demonstration, 
analysis, and inspection (T, D, A, I).
<itemize>
<item>
TEST. A qualification method that is carried out by operation of the item/component/I/F (or some part of the computer S/W configuration item, etc.) and that relies on 
the collection and subsequent examination of data.              
</item>
<item>
DEMONSTRATIONS
A qualification method that is carried out by operation of the 
item/component/I/F (or some part of the computer S/W configuration item, etc.), 
and that relies on observable functional operation not requiring the use of 
elaborate instrumentation or special test equipment.
</item>
<item>
ANALYSIS
A qualification method that is carried out by the processing 
of accumulated data. An example of accumulated data is the compilation of 
data obtained from other qualification methods. Examples of the processing 
of accumulated 
data are interpretations or extrapolations made from the data.
</item>
<item>
INSPECTION
A qualification method that is carried out by visual examination, physical manipulation, or measurement to verify that the requirements have been satisfied
</item>
</itemize>
</text_body>
</p>
<p id="4.14.3">
</p>
<p id="4.14.4">
<title>REQUIREMENTS TRACEABILITY</title>
<text_body>Provided under separate document.</text_body>
</p>
<p id="4.14.5">
</p>
<p id="4.14.6">
<title>NOTES</title>
<p id="4.14.6.1">
<title>ACRONYMS &amp; ABBREVIATIONS</title>
<text_body>
<itemize>
<item>
ACCS
Army Command and Control Systems
</item>
<item>
GCCS-AAGCCS
Army Global Command and Control System- Army
</item>
<item>
ANSI
American National Standards Institute
</item>
<item>
API 
Application Programming Interface
</item>
<item>
ASCII 
American Standard Code Information Interchange
</item>
<item>
ASCII RTF 
American Standard Code Information Interchange Rich Text Format
</item>
<item>
ASRD AWIS 
Software Requirements Specification Document
</item>
<item>
ATCCS 
Army Tactical Command and Control Systems
</item>
<item>
AWIS  
Army WWMCCS Information System
</item>
<item>
CASS
Common ACCS Support Software
</item>
<item>
CLI 
Client Library Interface
</item>
<item>
CM
Configuration Manager
</item>
<item>
COE
Common Operating Environment
</item>
<item>
COTS
Commercial Off-The-Shelf
</item>
<item>
 X-DA
Data Access
</item>
<item>
DAC
Discretionary Access Control 
</item>
<item>
 XS
Data Access Service
</item>
<item>
DBIF
Database Interface
</item>
<item>
DBMS
Database Management System
</item>
<item>
 DBs
 Databases
</item>
<item>
 DATATWG
Data Access Services Technical Working Group
</item>
<item>
 DCE
Distributing Computing Environment
</item>
<item>
DDL
Data Definition Language
</item>
<item>
DDS
Data Distribution System
</item>
<item>
DES
Data Encryption Standard
</item>
<item>
DID 
Data Item Description
</item>
<item>
DII 
Defense Information Infrastructure
</item>
<item>
DISA 
Defense Information Systems Agency
</item>
<item>
DML 
Data Manipulation Language
</item>
<item>
DoD
Department of Defense
</item>
<item>
DTG
Date-Time-Group
</item>
<item>
FIPS PUB  
Federal Information Processing Standards Publication
</item>
<item>
FMWG
File Management Working Group
</item>
<item>
GCCS  
Global Command and Control Systems
</item>
<item>
GOTS
Government Off-The-Shelf
</item>
<item>
GUI
Graphical User Interface
</item>
<item>
HP
Hewlett-Packard
</item>
<item>
IAW 
in accordance with
</item>
<item>
ID
Identification
</item>
<item>
I/F
Interface
</item>
<item>
 IF
Intell Fusion
</item>
<item>
I/O
Input/Output
</item>
<item>
JMCIS
Joint Maritime Command Information System
</item>
<item>
JOBES
Joint Operation Planning and Execution System
</item>
<item>
MAC
Mandatory Access Control
</item>
<item>
Mbs 
Megabytes
</item>
<item>
MCG&amp;I
Mapping, Charting, Geodesy and Imagery
</item>
<item>
MIL-STD 
Military Standard
</item>
<item>
MSB
Most Significant Bit
</item>
<item>
OS  
Operating System
</item>
<item>
PM 
Project Manager
</item>
<item>
POSIX
Portable Operating System Interface for Computing Environments
</item>
<item>
RAID
Redundant Array of Inexpensive Disks
</item>
<item>
RDA 
Remote Database Access 
</item>
<item>
RDBMS 
Relational Database Management System
</item>
<item>
RISC
Reduced Instruction Set Computer
</item>
<item>
RTF
Rich Text Format 
</item>
<item>
SECTWG
Security Services Technical Working Group
</item>
<item>
SMM
Systems Management Manual
</item>
<item>
SQL
Structured Query Language
</item>
<item>
SRI 
Standing Request for Information
</item>
<item>
SRS
Software Requirements Specification
</item>
<item>
SSDD
Support Software Design Document
</item>
<item>
STACCS
Standard Theater Army Command And Control System
</item>
<item>
 S/W
Software
</item>
<item>
TBD
To Be Determined
</item>
<item>
WWMCCS 
World-Wide Military Command and Control System
</item>
</itemize>
</text_body>
</p>
<p id="4.14.6.2">
<title>GLOSSARY OF TERMS</title>
<text_body>
<itemize>
<item>Automatically:
 Indicates processing initiated during execution of other processes, 
but dependent on information and/or parameters to be generated or supplied to 
these other processes. The information / parameters may be data dependent, or 
application dependent, or dependent on a manual process/human intervention. 
It will include controls qualifying the processing involved.
</item>
<item>Business Rule:
A narrative description of policies, procedures, or principles within 
an organization. Business rules can be divided in to 
four categories: definitions, facts, constraints, and derivations.
</item>
<item>Definitions are business rules that define entities and attributes.</item>
<item>Facts are either links (relationships) between entities or associations 
between an entity and attributes</item>
<item>Constraints are conditions about the data that must always be true. 
They are the integrity rules that protect the data in the eventual database.</item>
<item>Derivations are business rules that materialize a new piece of information (often attribute values) from other pieces of information. For example, a mathematical derivation might specify that you can obtain a person's 
age by subtracting his or her birth date from the current date.</item>
<item>Commit/Rollback:
An individual transaction is processed (commit) or discarded (rollback) by the proponent maintainer 
of the data items involved.
</item>
<item>Discretionary Access Controls (DAC):
A means of restricting access to objects based on the identity of subjects or groups to which they belong. The controls are discretionary in the sense that a subject with a certain access permission is capable 
of passing that permission on to any other subject.
</item>
<item>Dynamically Generated Processing:
Indicates processing initiated during execution of other processes, 
but dependent upon information and/or parameters to be generated or supplied 
to these other processes. The information/parameters may be data dependent, 
or application dependent, or dependent on a manual process/human intervention. It will 
include controls qualifying the processing involved.
</item>
<item>Location Transparency:
occurs when the physical location of data is transparent to the 
applications and users of the database system. For example, a view that joins 
table data from several databases provides location transparency because the 
user of the view 
does not need to know where the data originates from.
</item>
<item>Mandatory Access Control (MAC): 
Imediates access to an object based on the clearance level of the 
subject (user) and the sensitivity label of the object. (These controls are always 
enforced above any discretionary control implemented by users).
</item>
<item>Mirrored Databases:
Replication and maintenance of a database on a transaction basis 
for the purpose of rapid error or failure recovery as supported by the resident COTS 
RDBMS own system utilities and operating system.
</item>
<item>Object:
A passive entity that contains or receives information. 
Access to an object potentially implies access to the information it 
contains. Examples of objects are records, blocks, pages, segments, 
files, directories, directory trees, and programs, as well as bits, bytes, 
words, fields, processors, 
video displays, keyboards, clocks, printers, and network nodes.
</item>
<item>Proponent Scheme:
Describes the sites at which databases are replicated and also 
who owns and has update authority with respect to the data at each site. It refers to 
proponency at the source and record level.
</item>
<item>Redundant Array of Inexpensive Disks (RAID):
A RAID system appears as one very large, reliable disk to the CPU. 
The main reason for using RAID storage is its reliability. RAID has the same 
advantages as 
shadowing and striping at a lower cost. There are several types/levels of RAID 
implementations, including: RAID 0 (known as disk striping), RAID 1 (known as 
disk shadowing), RAID 3 (in which data is distributed in small increments across 
all data disks and adds a parity value to a separate disk for recovery if any disk fails, 
RAID 4 (in which data is distributed in large chunks across all data disks and also has
a single parity disk. RAID 4 intended to overcome performance penalties of RAID 3 for 
small transfers. RAID 5 (in which parity over RAID 3 or RAID 4 implementations), 
and RAID 6 ( in which two parity disks in addition to data disks are used in an attempt 
to further improve performance). In a RAID 5 implementation, the data is stored as are 
check sums and other information about the contents of each disk in the array. If one 
disk is lost, the others can use the check sums and other stored information to recreate 
the lost data. Storage system vendors may provide additional enhancements to RAID level 
implementations to improve performance and reliability.
</item>
<item>Remote Data Access (RDA): 
is an ISO (9579) application layer interoperability standard 
(protocol and formats) to support access by an application to a (remote) 
DBMSs over an OSI network. The goal of RDA is to allow interoperability between 
applications (clients) and databases (servers) of different manufacturers so that 
an application is able to read and update data in remote databases via well defined 
standards. RDA defines a set of client and server standards and a mapping of SQL 
commands to these services. RDA also defines an interface to ISO (transaction processing) 
two phase commit TP services in the case where updates to multiple remote databases 
need to be coordinated. RDA does not yet define interoperability between server databases 
(i.e. it is not yet a standard for distributed database management).

</item>
<item>Replication Scheme:
Information that precisely identifies DBs, or partitions of DBs, to be 
copied and/or distributed, replication schedules, 
and master/remote sites that are to receive the copies.
</item>
<item>Spatial DBMS: 
Geographic information system that organizes and maintains spatial 
data (i.e. data with graphical attributes) in terms of type, scale, location(s), extent, 
topology and geometry. Supports queries of spatial 
data where the selection criteria are defined by spatial attributes.
</item>
<item>SRI:
A Standing Request For Information (SRI) is a capability in which CASS monitors for the occurrence of conditions established by an application program, and notifies the calling or establishing application program when the conditions are satisfied. An SRI may 
be one of three types: timer-based, data-based, or message-based.
</item>
<item>Subject: 
An active entity, generally in the form of a person, process, or device that causes information to flow among objects or changes the system state. 
Technically, a process/domain pair.
</item>
<item>Transaction Journalling:
 Individual messages or database transactions are stored in a journal file, 
which may be a linear 
log file or a circular file.
</item>
</itemize>
</text_body>
</p>
</p>
<p id="4.14.7">
<title>APPENDIX A</title>
<text_body>The metadata and procedures are described for the current Information Resource Submittal Package .
<itemize>
<item>
Metadata and Related Information
An XML tag may be described as any object and is easily 
created by anyone using a text editor. Although XML is a relatively new 
technology, many developers are already using XML in operational COE 
systems and have already created tags and specifications, many of which 
may be inconsistent with tags used in other systems. So far, the burgeoning 
sets of XML tags have 
created redundancy and irrelevancy, and they lack validity.
</item>
<item>
XML Registry. 
To ensure interoperability, this registry provides a baseline 
set of tags developed through coordination and approval among the Community. 
The Registry allows a user to browse, search, and retrieve data that satisfy your 
requirements. The Registry has a substring search capability so that the user may 
easily find information resources that meet the criteria. The user may specify whether 
to search for the term within 
the name of the information resource or the definition or both.
</item>
<item>
Developer's Role.
Developers are urged to review the baseline tags, adopt 
them where possible, and subscribe to future notifications about the tags. If, 
after reviewing the tags in the Registry, you cannot reuse an existing specification 
(a.k.a. Document Type Definition (DTD)) or existing tags, you may submit your 
proposed tag to a Community of Interest (COI) and provide amplifying information 
for all to understand the semantics for its proper use. 
</item>
<item>
COE Chief Engineer's Role.
The COE Chief Engineer will approve a single Point of Contact (POC) 
for a COI to manage the tags within that COI. The COE Chief Engineer will reserve 
ultimate authority to mediate any 
unresolved disputes within all COIs. 
</item>
<item>
The COE Data Engineering Team's Role.
Tags and semantics will be analyzed to identify opportunities 
to consolidate tags towards a single or a minimal number of representations. 
A "market forces" model can also guide COE Data Engineering in identifying the weak 
candidates from the strong.8
</item>
<item>
The Community of Interest's POC's Role.
(The information in the following section is current as of 17 May, 1999. 
Please consult the Registry for the most authoritative list of information resources types.) 
The POC responsibilities will include the transitioning of information resources from one 
status to another. Table 1 lists the valid types of information resources. 
The status levels are developmental, 
candidate, approved, rejected, and retired. 
</item>
</itemize>
</text_body>
<p id="table 1">
<title>information Resource Types</title>
</p>
<p id="table 2">
<title>information Resource Association Types</title>
</p>
<p id="Procedures">
<text_body>For Developers may submit and use information resources within the 
Registry constitutes guidance in the generation and use of XML as an 
authoritative source for approved XML data and metadata components.
<itemize>
<item>Review Tags in Registry and decide what additions/modifications to submit (if any) 
</item>
<item>Fill out one XML submission document to package multiple Tags 
</item>
<item>Specify relationships among Tags, provide valid values, and add to submission package</item>
<item>Include amplifying info associated with specific Tag(s)</item>
</itemize>
</text_body>
<text_body>Zip and attach submission package to e-mail message to: ____________________</text_body>
</p>
<p id="Rules and Convensions.">
<text_body>Establishing a new Information Resource. Follow these conventions for creating 
new information resources for the Registry </text_body>
<p id="1.">
<title>Use "XML_Attributes" sparingly</title>
<text_body>If the term is well recognized outside its container term, designate 
it as an element. Example: CTRY_CD, CTRY_NM, CTRY_ABBRD_NM, CTRY_OFF_NM, 
CTRY_SCP_NT_TX, and CTRY_PSTL_NM 
are all characteristics (ER-attributes) for the entity CTRY. In the relational world, 
they are columns within the table ctry, attributes of the entity ctry in er-modeling, 
and member attributes in object modeling. It would be expected that a submitter 
would identify them as attributes rather than elements. But if they were identified as 
attributes of the element ctry, then the additional baggage (other attributes) must be 
carried, or submitted as separate elements. We wish to limit the proliferation of tags, 
so we strongly urge folks to use XML_Attributes sparingly. </text_body>
</p>
</p>
<p id="Include descriptive definitions AND synonyms for the Information Resource 
Definition. ">
<text_body>Initially, the Registry will not have keyword, thesaurus, or ontology 
support but it will have a substring search for a number of fields, including definition. 
Therefore, we urge submitters to include enough expressive terms so that COE developers 
would easily find the term they might consider "natural" in the definition and find the 
desirable tag for expressing that concept. Example: If the 
registered tag is ORG_ID, the description that includes references</text_body>
</p>
<p id="4.14.7.1.">
<title>APPENDIX B</title>
<p id="4.14.7.1.1">
<title>EXTERNAL PROGRAMMING INTERFACE</title>
<text_body>The External Interfaces for the XS SRS are defined as interfaces to non-COE 
components. Detailed information (as specified in paragraph 3.3 of the Data Item 
Description DI-IPSC-81433) defining these interfaces will be specified during the 
design phase of the COE XS architecture. 
At this time such detailed information is unavailable.</text_body>
</p>
</p>
<p id="4.14.7.2.">
</p>
<p id="4.14.7.3.">
<title>APPENDIX C</title>
<p id="4.14.7.3.1.">
<title>INTERNAL PROGRAMMING INTERFACES</title>
<text_body>The Internal Interfaces for the XS SRS are defined as interfaces to COE 
components. Detailed information (as specified in paragraph 3.4 of the Data Item 
Description DI-IPSC-81433) defining these interfaces will be specified during the 
design phase of the COE XS architecture. At this time such detailed information is 
unavailable.The COE components identified to-date are listed below.</text_body>
<p id="4.14.7.3.1.1.">
<title>MANAGEMENT SERVICES API</title>
<text_body>It incorporates other interfaces to:
<itemize>
<item>Network Administration</item>
<item>System Administration</item>
<item>Security Administration</item>
</itemize>
</text_body>
</p>
</p>
</p>
</p>
</p>
</p>
<p id="1.">
<title>DISTRIBUTED SYSTEM SERVICES</title>
<p id="1.1.">
<title>COMMUNICATIONS SERVICES API</title>
<text_body>It incorporates other interfaces to:
<itemize>
<item>Communications</item>
<item>Network Services</item>
</itemize>
</text_body>
<p id="1.1.1.">
<title>DISTRIBUTION AND OBJECT MANAGEMENT SERVICES</title>
<text_body>It incorporates other interfaces to:
<itemize>
<item>Distributed Computing Services</item>
<item>Data Interchange Services</item>
</itemize>
</text_body>
</p>
</p>
</p>
<p id="1."> 
<title>APPLICATION SUPPORT SERVICES</title>
<p id="1.1.">
<title>PRESENTATION SERVICES</title>
<text_body>It incorporates other interfaces to:
<itemize>
<item>Executive Manager</item>
<item>Multi-Media Support</item>
</itemize>
</text_body>
</p>
</p>
<p id="1.">
<title>COMMON SUPPORT APPLICATIONS</title>
<text_body>It incorporates other interfaces to:
<itemize>
<item>Office Automation</item>
<item>Message Processing</item>
<item>Correlation</item>
<item>MCG &amp;I</item>
<item>Alerts</item>
<item>On-line Help</item>
</itemize>
</text_body>
</p>
<p id="1.">
<title>SOFTWARE DEVELOPMENT SERVICES</title>
<text_body>It incorporates other interfaces to:
<itemize>
<item>Developerâ€™s Toolkit</item>
</itemize>
</text_body>
</p>
<p id="1.">
</p>
<p id="2.">
<title>APPENDIX C</title>
<p id="2.1.">
<title>INTERFACES TO COMMERCIAL PRODUCTS</title>
<text_body>The Interfaces to Commercial Products for the XS SRS are identified below. 
Detailed information (as specified in paragraph 3.3 of the Data Item Description 
DI-IPSC-81433) defining these interfaces will be specified during the design phase of 
the COE XS architecture. At this time such detailed information is unavailable.
The three commercial products or environments identified for the COE are the following 
Relational Database engines:
<itemize>
<item>Sybase</item>
<item>Oracle</item>
<item>Informix.</item>
</itemize>
</text_body>
</p>
</p>
</req_document>